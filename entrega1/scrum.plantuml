
@startuml
allowmixing

/'
    https://www.scrum.org/resources/what-is-scrum
'/

title Modelado Colaborativo del proceso de SCRUM

() "<&star>Product Owner" as owner #LightBlue
() "<&star>Stake Holder" as sh #LightBlue
() "<&star>Room" as room #Orange
rectangle product #Gray
rectangle product_backlog #Green

product "1" -d[#Blue]-> "1" owner
product "1" -d[#Blue]-> "*" sh
product -[#Green]-> product_backlog
product -[#Orange]-> room


() "<&star>Product Owner" as owner2 #LightBlue
() "<&star>Team Member" as tm2 #LightBlue
() "<&star>Room" as room2 #Orange
rectangle sprint_planning #Gray
rectangle "product_backlog" as product_backlog2 #Green
rectangle sprint_plan #Green
sprint_planning "1" -[#Blue]-> "*" tm2
sprint_planning "1" -[#Blue]-> "1" owner2
sprint_planning -[#Green]-> product_backlog2
sprint_planning -[#Green]-> sprint_plan
sprint_planning -[#Orange]-> room2
'product ...> sprint_planning


() "<&star>Team Member" as tm3 #LightBlue
() "<&star>Scrum Master" as sm3 #LightBlue
() "<&star>Desktop" as desktop3 #Orange
rectangle "sprint_plan" as sprint_plan3 #Green
rectangle "editor" as editor3 #Green
rectangle "git" as git3 #Green
rectangle "chat" as chat3 #Green
rectangle "video" as video3 #Green
rectangle dev #Gray

dev "1" -[#Blue]-> "*" tm3
dev "1" -[#Blue]-> "1" sm3
dev -u[#Green]-> sprint_plan3
dev -u[#Green]-> editor3
dev -u[#Green]-> git3
dev -u[#Green]-> chat3
dev -u[#Green]-> video3
dev -[#Orange]-> desktop3
'sprint_planning ...> dev


() "<&star>Team Member" as tm4 #LightBlue
() "<&star>Scrum Master" as sm4 #LightBlue
() "<&star>Room" as room4 #Orange
rectangle daily_scrum #Gray
rectangle "sprint_plan" as sprint_plan4 #Green
daily_scrum "1" -[#Blue]-> "*" tm4
daily_scrum "1" -[#Blue]-> "1" sm4
daily_scrum -[#Green]-> sprint_plan4
daily_scrum -[#Orange]-> room4
'dev .> daily_scrum
'daily_scrum .> dev


() "<&star>Team Member" as tm5 #LightBlue
() "<&star>Stake Holder" as sh5 #LightBlue
() "<&star>Product Owner" as pw5 #LightBlue
() "<&star>Room" as room5 #Orange
rectangle "sprint_plan" as sprint_plan5 #Green
rectangle sprint_review #Gray
sprint_review "1" -[#Blue]-> "*" tm5
sprint_review "1" -[#Blue]-> "*" sh5
sprint_review "1" -[#Blue]-> "1" pw5
sprint_review -[#Green]-> sprint_plan5
sprint_review -[#Orange]-> room5

'dev ...> sprint_review


() "<&star>Team Member" as tm6 #LightBlue
() "<&star>Scrum Master" as sm6 #LightBlue
() "<&star>Tablero" as tablero6 #Orange
rectangle "sprint_plan" as sprint_plan6 #Green
rectangle sprint_retrospective #Gray
sprint_retrospective "1" -[#Blue]-> "*" tm6
sprint_retrospective "1" -[#Blue]-> "1" sm6
sprint_retrospective -[#Green]-> sprint_plan6
sprint_retrospective -[#Orange]-> tablero6
'sprint_review .up.> sprint_retrospective
'sprint_retrospective .> dev


' iteración del producto

'rectangle product_iteration
'dev ...down...> product_iteration


@enduml

/' 
    El diagrama de transición entre actividades 
'/
@startuml proceso_colaborativo
'top to bottom direction

(*) --> "product" as p
    p -->[(Product Owner) Room->finalizar_backblog()] "sprint_planning" as sp


    sp --> [(Product Owner) Room->finalizar_planificacion()] dev
    dev --> === sprint ===
        --> [(Scrum Master) Desktop->discutir_avance()] "daily_scrum" as ds
        ds -u-> [(Scrum Master) Room->finalizar_review_diario()] dev

        === sprint === -->[(Scrum Master) Desktop->entregar_iteracion_producto()] iteracion_producto
        === sprint === -->[(Scrum Master) Desktop->finalizar_desarrollo()] sprint_review

        sprint_review --d--> sprint_retrospective
        sprint_retrospective ---> dev

        iteracion_producto --> (*)


@enduml


@startuml
title Etapa de definición del producto
allowmixing

() "<&star>Product Owner" as owner #LightBlue
() "<&star>Stake Holder" as sh #LightBlue
() "<&star>Room" as room #Orange
rectangle "Definición de Producto" as product #Gray
rectangle product_backlog #Green
rectangle video #Green

product "1" -d[#Blue]-> "1" owner
product "1" -d[#Blue]-> "*" sh
product -[#Green]-> product_backlog
product -[#Green]-> video
product -[#Orange]-> room

@enduml

/'
    El diagrama de transición de estados dentro de la actividad
'/
@startuml
title protocolo de product

'se analiza y se genera el product backlog

state c1 <<choice>>

state inicia_vc
inicia_vc: Available Operations: \n----------------------------------
inicia_vc: 
inicia_vc: Transition Operations: \n--------------------------------
inicia_vc: (Stake Holder) Video->pedir_hablar
inicia_vc: (Product Owner) Video->pedir_hablar

state HablaStakeHolder
HablaStakeHolder: Available Operations: \n---------------------------
HablaStakeHolder: (Stake Holder) Video->hablar
HablaStakeHolder: 
HablaStakeHolder: Transition Operations: \n---------------------------
HablaStakeHolder: (Product Owner) Video->pedir_hablar
HablaStakeHolder: (Product Owner) Video->terminar
HablaStakeHolder: (Product Owner) product_backlog->escribir

state HablaProductOwner
HablaProductOwner: Available Operations: \n---------------------------
HablaProductOwner: (Product Owner) Video->hablar
HablaProductOwner: 
HablaProductOwner: Transition Operations: \n--------------------------
HablaProductOwner: (Stake Holder) Video->pedir_hablar
HablaProductOwner: (Product Owner) Video->terminar
HablaProductOwner: (Product Owner) product_backlog->escribir


state ProductBacklogEscribir
ProductBacklogEscribir: Available Operations: \n------------------------
ProductBacklogEscribir: (Product Owner) backlog->escribir
ProductBacklogEscribir: 
ProductBacklogEscribir: Transition Operations: \n------------------------
ProductBacklogEscribir: (Stake Holder) Video->pedir_hablar
ProductBacklogEscribir: (Product Owner) Video->pedir_hablar
ProductBacklogEscribir: (Product Owner) product_backlog->terminar

[*] --> inicia_vc
inicia_vc --> c1
c1 -[dashed]-> HablaStakeHolder : (Stake Holder) Video->pedir_hablar
c1 -[dashed]-> HablaProductOwner : (Product Owner) Video->pedir_hablar
c1 -[dashed]-> ProductBacklogEscribir: (Product Owner) product_backlog->escribir
c1 --[dashed]--> [*] : (Product Owner) product_backlog->terminar

HablaStakeHolder ---> c1 
HablaProductOwner ---> c1
ProductBacklogEscribir ---> c1

@enduml

@startuml
title ejemplo video conferencia

[*] --> vc

state c1 <<choice>>

state vc
vc: Available Operations: \n----------------------------------
vc: (Stake Holder) Video->hablar
vc: (Product Owner) Video->hablar
vc: (Product Owner) Video->terminar
vc: 
vc: Transition Operations: \n--------------------------------
vc: (Product Owner) product_backlog->escribir

state ProductBacklogEscribir
ProductBacklogEscribir: Available Operations: \n------------------------
ProductBacklogEscribir: (Product Owner) product_backlog->escribir
ProductBacklogEscribir: 
ProductBacklogEscribir: Transition Operations: \n------------------------
ProductBacklogEscribir: (Stake Holder) Video->pedir_hablar
ProductBacklogEscribir: (Product Owner) Video->pedir_hablar
ProductBacklogEscribir: (Product Owner) product_backlog->terminar

vc --> c1
c1 -[dashed]-> ProductBacklogEscribir: (Product Owner) product_backlog->escribir
c1 --[dashed]--> [*] : (Product Owner) product_backlog->terminar
c1 --[dashed]--> vc : (Product Owner) Video->pedir_hablar
c1 --[dashed]--> vc : (Stake Holder) Video->pedir_hablar

ProductBacklogEscribir ---> c1


@enduml


@startuml
title protocolo de product

'se analiza y se genera el product backlog

state c1 <<choice>>

state inicia_vc
inicia_vc: Available Operations: \n----------------------------------
inicia_vc: 
inicia_vc: Transition Operations: \n--------------------------------
inicia_vc: (Stake Holder) Video->pedir_hablar
inicia_vc: (Product Owner) Video->pedir_hablar

state HablaStakeHolder
HablaStakeHolder: Available Operations: \n---------------------------
HablaStakeHolder: (Stake Holder) Video->hablar
HablaStakeHolder: 
HablaStakeHolder: Transition Operations: \n---------------------------
HablaStakeHolder: (Product Owner) Video->pedir_hablar
HablaStakeHolder: (Product Owner) Video->terminar
HablaStakeHolder: (Product Owner) product_backlog->escribir

state HablaProductOwner
HablaProductOwner: Available Operations: \n---------------------------
HablaProductOwner: (Product Owner) Video->hablar
HablaProductOwner: 
HablaProductOwner: Transition Operations: \n--------------------------
HablaProductOwner: (Stake Holder) Video->pedir_hablar
HablaProductOwner: (Product Owner) Video->terminar
HablaProductOwner: (Product Owner) product_backlog->escribir


state ProductBacklogEscribir
ProductBacklogEscribir: Available Operations: \n------------------------
ProductBacklogEscribir: 
ProductBacklogEscribir: Transition Operations: \n------------------------
ProductBacklogEscribir: (Stake Holder) Video->pedir_hablar
ProductBacklogEscribir: (Product Owner) Video->pedir_hablar
ProductBacklogEscribir: (Product Owner) product_backlog->terminar

[*] --> inicia_vc
inicia_vc --> c1
c1 -[dashed]-> HablaStakeHolder : (Stake Holder) Video->pedir_hablar
c1 -[dashed]-> HablaProductOwner : (Product Owner) Video->pedir_hablar
c1 -[dashed]-> ProductBacklogEscribir: (Product Owner) product_backlog->escribir
c1 --[dashed]--> [*] : (Product Owner) product_backlog->terminar

HablaStakeHolder ---> c1 
HablaProductOwner ---> c1
ProductBacklogEscribir ---> c1

@enduml


@startuml

state estado1
estado1: algo
estado1: algo2

[*] -> estado1
estado1 -> estado2
estado2 -> estado3
estado3 -> [*]

@enduml